{"version":3,"file":"Avatar.js","sourceRoot":"","sources":["../../../Avatar/src/Avatar.tsx"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,OAAO,CAAA;AAC3C,OAAO,EAAE,SAAS,EAA+B,MAAM,aAAa,CAAA;AACpE,OAAO,UAAU,MAAM,cAAc,CAAA;AAErC,MAAM,MAAM,GAAG,UAAU,CAAyB,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE;IAC/D,MAAM,EACJ,OAAO,EACP,WAAW,EACX,YAAY,EACZ,gBAAgB,EAChB,aAAa,EACb,WAAW,EACX,GAAG,EACH,OAAO,EACP,YAAY,EACZ,QAAQ,EAAE,iBAAiB,GAC5B,GAAG,SAAS,iCAAM,KAAK,KAAE,GAAG,IAAG,CAAA;IAEhC,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,EAAE;QAC5B,OAAO,CACL,8BAAS,gBAAgB,EAAE,cAEvB,iBAAiB;gBACf,CAAC,CAAC,iBAAiB;gBACnB,CAAC,CAAC,KAAC,UAAU,KAAG,IAEhB,CACP,CAAA;IACH,CAAC,EAAE,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC,CAAA;IAEtB,OAAO,CACL,MAAC,OAAO,oBAAK,YAAY,EAAE,eAEvB,GAAG,IAAI,WAAW,KAAK,QAAQ;gBAC7B,CAAC,CAAC,8BAAS,WAAW,EAAE,EAAI;gBAC5B,CAAC,CAAC,WAAW,KAAK,SAAS;oBACzB,CAAC,CAAC,IAAI;oBACN,CAAC,CAAC,QAAQ,EAGd,OAAO;gBACL,CAAC,CAAC,CACE,+BAAU,aAAa,EAAE,cACrB,YAAY,IACT,CACR;gBACH,CAAC,CAAC,IAAI,KAEF,CACX,CAAA;AACH,CAAC,CAAC,CAAA;AAEF,MAAM,CAAC,WAAW,GAAG,kBAAkB,CAAA;AAEvC,eAAe,MAAM,CAAA","sourcesContent":["import { forwardRef, useMemo } from 'react'\r\nimport { useAvatar, type AvatarProps, AvatarRef } from './useAvatar'\r\nimport AvatarIcon from './AvatarIcon'\r\n\r\nconst Avatar = forwardRef<AvatarRef, AvatarProps>((props, ref) => {\r\n  const {\r\n    Element,\r\n    getImgProps,\r\n    getBaseProps,\r\n    getFallbackProps,\r\n    getBadgeProps,\r\n    imageStatus,\r\n    src,\r\n    isBadge,\r\n    badgeContent,\r\n    fallback: fallbackComponent,\r\n  } = useAvatar({ ...props, ref })\r\n\r\n  const fallback = useMemo(() => {\r\n    return (\r\n      <div {...getFallbackProps()}>\r\n        {\r\n          fallbackComponent\r\n            ? fallbackComponent\r\n            : <AvatarIcon />\r\n        }\r\n      </div>\r\n    )\r\n  }, [src, imageStatus])\r\n\r\n  return (\r\n    <Element {...getBaseProps()}>\r\n      {\r\n        src && imageStatus === 'loaded'\r\n          ? <img {...getImgProps()} />\r\n          : imageStatus === 'loading'\r\n            ? null\r\n            : fallback\r\n      }\r\n      {\r\n        isBadge\r\n          ? (\r\n              <span {...getBadgeProps()}>\r\n                { badgeContent }\r\n              </span>\r\n            )\r\n          : null\r\n      }\r\n    </Element>\r\n  )\r\n})\r\n\r\nAvatar.displayName = 'simplexui.avatar'\r\n\r\nexport default Avatar\r\n"]}