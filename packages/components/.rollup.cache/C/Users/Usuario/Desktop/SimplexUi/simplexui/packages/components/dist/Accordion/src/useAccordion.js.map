{"version":3,"file":"useAccordion.js","sourceRoot":"","sources":["../../../Accordion/src/useAccordion.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,SAAS,EAA8D,MAAM,MAAM,CAAA;AACxG,OAAO,EAAE,WAAW,EAAE,OAAO,EAAE,MAAM,OAAO,CAAA;AAC5C,OAAO,EACL,YAAY,IAAI,mBAAmB,GAGpC,MAAM,cAAc,CAAA;AACrB,OAAO,wBAAwB,CAAA;AAqB/B,MAAM,UAAU,YAAY,CAAC,KAAqB;IAChD,MAAM,EACJ,EAAE,EACF,GAAG,EACH,QAAQ,EACR,OAAO,GAAG,OAAO,EACjB,KAAK,GAAG,KAAK,EACb,SAAS,EACT,SAAS,KAEP,KAAK,EADJ,UAAU,UACX,KAAK,EATH,uEASL,CAAQ,CAAA;IAET,MAAM,OAAO,GAAG,EAAE,IAAI,KAAK,CAAA;IAC3B,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,mBAAmB,CAAC,UAAU,CAAC,CAAA;IAC5D,MAAM,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,CAAA;IAE7B,MAAM,OAAO,GAAG,OAAO,CAAiB,GAAG,EAAE,CAAC,iBAC5C,OAAO;QACP,KAAK;QACL,SAAS,IACN,KAAK,EACR,EAAE,CAAC,KAAK,CAAC,CAAC,CAAA;IAEZ,MAAM,OAAO,GAAG,UAAU,CAAC;QACzB,oBAAoB,EAAE,KAAK;QAC3B,CAAC,eAAe,GAAG,OAAO,CAAC,EAAE,CAAC,KAAK;KACpC,EACD,kBAAkB,EAClB,cAAc,EACd,SAAS,CACR,CAAA;IAED,MAAM,YAAY,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC,iCAClC,SAAS,KACZ,SAAS,EAAE,OAAO,IAClB,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC,CAAA;IAE3B,OAAO;QACL,OAAO;QACP,MAAM;QACN,QAAQ;QACR,OAAO;QACP,YAAY;KACb,CAAA;AACH,CAAC","sourcesContent":["import { classnames, useDOMRef, type GenericStyles, type HTMLSimplexuiProps, type ReactRef } from 'core'\r\nimport { useCallback, useMemo } from 'react'\r\nimport {\r\n  useAccordion as useSimplexAccordion,\r\n  AccordionProps as SimplexAccordionProps,\r\n  type AccordionState,\r\n} from 'simplex_hook'\r\nimport './styles/Accordion.css'\r\n\r\nexport type AccordionRef = HTMLDivElement | null\r\n\r\ninterface Props extends HTMLSimplexuiProps<'div', 'onChange'> {\r\n  ref?: ReactRef<AccordionRef>\r\n  color?: GenericStyles.Color\r\n  radius?: GenericStyles.Radius\r\n  size?: GenericStyles.Size\r\n  variant?: 'light' | 'shadow' | 'outlined'\r\n  split?: boolean\r\n  classItem?: string\r\n}\r\n\r\nexport interface AccordionContext extends AccordionState {\r\n  variant?: GenericStyles.Variant\r\n  classItem?: string\r\n  split?: boolean\r\n}\r\nexport type AccordionProps = Props & SimplexAccordionProps\r\n\r\nexport function useAccordion(props: AccordionProps) {\r\n  const {\r\n    as,\r\n    ref,\r\n    children,\r\n    variant = 'light',\r\n    split = false,\r\n    className,\r\n    classItem,\r\n    ...otherProps\r\n  } = props\r\n\r\n  const Element = as || 'div'\r\n  const { state, baseProps } = useSimplexAccordion(otherProps)\r\n  const domRef = useDOMRef(ref)\r\n\r\n  const context = useMemo<AccordionState>(() => ({\r\n    variant,\r\n    split,\r\n    classItem,\r\n    ...state,\r\n  }), [state])\r\n\r\n  const classes = classnames({\r\n    'sx-accordion-split': split,\r\n    ['sx-accordion-' + variant]: !split,\r\n  },\r\n  'simplexui-themes',\r\n  'sx-accordion',\r\n  className,\r\n  )\r\n\r\n  const getBaseProps = useCallback(() => ({\r\n    ...baseProps,\r\n    className: classes,\r\n  }), [baseProps, className])\r\n\r\n  return {\r\n    Element,\r\n    domRef,\r\n    children,\r\n    context,\r\n    getBaseProps,\r\n  }\r\n}\r\n"]}