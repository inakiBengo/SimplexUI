{"version":3,"file":"useInput.js","sourceRoot":"","sources":["../../../../Input/src/useInput.ts"],"names":[],"mappings":";AAAA,OAAO,oBAAoB,CAAA;AAC3B,OAAO,EAAE,UAAU,EAAgC,SAAS,EAAE,MAAM,MAAM,CAAA;AAC1E,OAAO,EAAa,WAAW,EAAE,MAAM,OAAO,CAAA;AAC9C,OAAO,EACL,QAAQ,IAAI,eAAe,GAC5B,MAAM,cAAc,CAAA;AAYrB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAC,KAAiB,EAAE,EAAE;IAC5C,MAAM,EACJ,EAAE,EACF,GAAG,EACH,OAAO,EACP,MAAM,EACN,OAAO,EACP,QAAQ,EACR,OAAO,EACP,QAAQ,EACR,QAAQ,EACR,WAAW,EACX,KAAK,EACL,YAAY,EACZ,UAAU,EACV,SAAS,EACT,IAAI,EACJ,YAAY,EACZ,UAAU,EACV,OAAO,GAAG,SAAS,KAEjB,KAAK,EADJ,KAAK,UACN,KAAK,EApBH,gNAoBL,CAAQ,CAAA;IAET,MAAM,OAAO,GAAG,EAAE,IAAI,KAAK,CAAA;IAC3B,MAAM,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,CAAA;IAE7B,MAAM,EACJ,SAAS,EACT,UAAU,EACV,UAAU,EACV,WAAW,EACX,UAAU,EACV,QAAQ,EACR,SAAS,EACT,SAAS,GACV,GAAG,eAAe,CAAC;QAClB,GAAG,EAAE,MAAM;QACX,OAAO;QACP,MAAM;QACN,OAAO;QACP,QAAQ;QACR,OAAO;QACP,QAAQ;QACR,QAAQ;QACR,WAAW;QACX,KAAK;QACL,YAAY;QACZ,IAAI;KACL,CAAC,CAAA;IAEF,MAAM,WAAW,GAAG,UAAU,CAAC,EAAE,EAC/B,eAAe,GAAG,OAAO,EACzB,mBAAmB,CACpB,CAAA;IAED,MAAM,YAAY,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC,iCAClC,SAAS,KACZ,SAAS,EAAE,WAAW,EACtB,eAAe,EAAE,UAAU,IAAI,SAAS,EACxC,cAAc,EAAE,SAAS,IAAI,SAAS,EACtC,cAAc,EAAE,SAAS,IAAI,SAAS,EACtC,aAAa,EAAE,QAAQ,IAAI,OAAO,CAAC,YAAY,CAAC,IAAI,SAAS,IAC7D,EAAE,CAAC,SAAS,CAAC,CAAC,CAAA;IAEhB,MAAM,aAAa,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC,iCACnC,UAAU,KACb,SAAS,EAAE,qCAAqC,IAChD,EAAE,CAAC,UAAU,CAAC,CAAC,CAAA;IAEjB,MAAM,eAAe,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC,CAAC;QACzC,SAAS,EAAE,uCAAuC;KACnD,CAAC,EAAE,EAAE,CAAC,CAAA;IAEP,MAAM,aAAa,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC,+CACnC,KAAK,GACL,UAAU,KACb,SAAS,EAAE,8CAA8C,IACzD,EAAE,CAAC,UAAU,CAAC,CAAC,CAAA;IAEjB,MAAM,cAAc,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC,iCACpC,WAAW,KACd,SAAS,EAAE,+CAA+C,IAC1D,EAAE,CAAC,WAAW,CAAC,CAAC,CAAA;IAElB,OAAO;QACL,OAAO;QACP,YAAY;QACZ,aAAa;QACb,eAAe;QACf,aAAa;QACb,cAAc;QACd,UAAU;QACV,SAAS;QACT,YAAY;QACZ,UAAU;KACX,CAAA;AACH,CAAC,CAAA","sourcesContent":["import './styles/Input.css'\r\nimport { classnames, HTMLSimplexuiProps, ReactRef, useDOMRef } from 'core'\r\nimport { ReactNode, useCallback } from 'react'\r\nimport {\r\n  useInput as useSimplexInput,\r\n} from 'simplex_hook'\r\n\r\nexport interface InputProps extends HTMLSimplexuiProps<'input'> {\r\n  ref?: ReactRef<HTMLInputElement | null>\r\n  invalid?: boolean\r\n  helperText?: string\r\n  labelText?: string\r\n  startContent?: ReactNode | (() => ReactNode)\r\n  endContent?: ReactNode | (() => ReactNode)\r\n  variant?: 'light' | 'outline' | 'filled'\r\n}\r\n\r\nexport const useInput = (props: InputProps) => {\r\n  const {\r\n    as,\r\n    ref,\r\n    onFocus,\r\n    onBlur,\r\n    onClick,\r\n    readOnly,\r\n    invalid,\r\n    disabled,\r\n    required,\r\n    placeholder,\r\n    value,\r\n    defaultValue,\r\n    helperText,\r\n    labelText,\r\n    type,\r\n    startContent,\r\n    endContent,\r\n    variant = 'outline',\r\n    ...other\r\n  } = props\r\n\r\n  const Element = as || 'div'\r\n  const domRef = useDOMRef(ref)\r\n\r\n  const {\r\n    rootProps,\r\n    labelProps,\r\n    inputProps,\r\n    helperProps,\r\n    isDisabled,\r\n    isFilled,\r\n    isFocused,\r\n    isInvalid,\r\n  } = useSimplexInput({\r\n    ref: domRef,\r\n    onFocus,\r\n    onBlur,\r\n    onClick,\r\n    readOnly,\r\n    invalid,\r\n    disabled,\r\n    required,\r\n    placeholder,\r\n    value,\r\n    defaultValue,\r\n    type,\r\n  })\r\n\r\n  const rootClasses = classnames({},\r\n    'sx-textField-' + variant,\r\n    'sx-textField-root',\r\n  )\r\n\r\n  const getRootProps = useCallback(() => ({\r\n    ...rootProps,\r\n    className: rootClasses,\r\n    'data-disabled': isDisabled || undefined,\r\n    'data-focused': isFocused || undefined,\r\n    'data-invalid': isInvalid || undefined,\r\n    'data-filled': isFilled || Boolean(startContent) || undefined,\r\n  }), [rootProps])\r\n\r\n  const getLabelProps = useCallback(() => ({\r\n    ...labelProps,\r\n    className: 'simplexui-themes sx-textField-label',\r\n  }), [labelProps])\r\n\r\n  const getWrapperProps = useCallback(() => ({\r\n    className: 'simplexui-themes sx-textField-wrapper',\r\n  }), [])\r\n\r\n  const getInputProps = useCallback(() => ({\r\n    ...other,\r\n    ...inputProps,\r\n    className: 'simplexui-themes sx-reset sx-textField-input',\r\n  }), [inputProps])\r\n\r\n  const getHelperProps = useCallback(() => ({\r\n    ...helperProps,\r\n    className: 'simplexui-themes sx-reset sx-textField-helper',\r\n  }), [helperProps])\r\n\r\n  return {\r\n    Element,\r\n    getRootProps,\r\n    getLabelProps,\r\n    getWrapperProps,\r\n    getInputProps,\r\n    getHelperProps,\r\n    helperText,\r\n    labelText,\r\n    startContent,\r\n    endContent,\r\n  }\r\n}\r\n"]}