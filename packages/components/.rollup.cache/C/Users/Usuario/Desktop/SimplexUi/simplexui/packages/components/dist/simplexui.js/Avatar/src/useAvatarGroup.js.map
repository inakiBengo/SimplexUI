{"version":3,"file":"useAvatarGroup.js","sourceRoot":"","sources":["../../../../Avatar/src/useAvatarGroup.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAA+C,SAAS,EAAE,MAAM,MAAM,CAAA;AACzF,OAAO,EAAE,WAAW,EAAE,OAAO,EAAE,MAAM,OAAO,CAAA;AAC5C,OAAO,0BAA0B,CAAA;AACjC,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAA;AAejD,MAAM,CAAC,MAAM,cAAc,GAAG,CAAC,KAAuB,EAAE,EAAE;IACxD,MAAM,EACJ,GAAG,EACH,EAAE,EACF,QAAQ,EACR,IAAI,GAAG,IAAI,EACX,MAAM,EACN,IAAI,EACJ,QAAQ,GACT,GAAG,KAAK,CAAA;IAET,MAAM,OAAO,GAAG,EAAE,IAAI,KAAK,CAAA;IAC3B,MAAM,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,CAAA;IAE7B,MAAM,OAAO,GAAG,OAAO,CAAC,GAAG,EAAE,CAAC,CAAC;QAC7B,IAAI;QACJ,MAAM;QACN,QAAQ;KACT,CAAC,EAAE,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC,CAAA;IAEnB,MAAM,WAAW,GAAG,UAAU,CAAC;QAC7B,uBAAuB,EAAE,IAAI;KAC9B,EACD,uBAAuB,IAAI,EAAE,EAC7B,mBAAmB,EACnB,kBAAkB,CACjB,CAAA;IAED,MAAM,YAAY,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC,CAAC;QACtC,GAAG,EAAE,MAAM;QACX,SAAS,EAAE,WAAW;KACvB,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAA;IAEV,OAAO;QACL,OAAO;QACP,QAAQ;QACR,YAAY;QACZ,cAAc;QACd,OAAO;KACR,CAAA;AACH,CAAC,CAAA","sourcesContent":["import { classnames, GenericStyles, HTMLSimplexuiProps, ReactRef, useDOMRef } from 'core'\r\nimport { useCallback, useMemo } from 'react'\r\nimport './styles/AvatarGroup.css'\r\nimport { AvatarProvider } from './avatar_context'\r\n\r\nexport type AvatarGroupRef = HTMLDivElement | null\r\n\r\nexport type AvatarContext = {\r\n  size?: GenericStyles.Size\r\n  radius?: GenericStyles.Radius\r\n  disabled?: boolean\r\n}\r\n\r\nexport interface AvatarGroupProps extends HTMLSimplexuiProps<'div'>, AvatarContext {\r\n  ref?: ReactRef<HTMLDivElement>\r\n  grid?: boolean\r\n}\r\n\r\nexport const useAvatarGroup = (props: AvatarGroupProps) => {\r\n  const {\r\n    ref,\r\n    as,\r\n    children,\r\n    size = 'md',\r\n    radius,\r\n    grid,\r\n    disabled,\r\n  } = props\r\n\r\n  const Element = as || 'div'\r\n  const domRef = useDOMRef(ref)\r\n\r\n  const context = useMemo(() => ({\r\n    size,\r\n    radius,\r\n    disabled,\r\n  }), [size, radius])\r\n\r\n  const baseClasses = classnames({\r\n    'sx-grouÁccordion-grid': grid,\r\n  },\r\n  `sx-avatarGroup-size-${size}`,\r\n  'sx-groupAccordion',\r\n  'simplexui-themes',\r\n  )\r\n\r\n  const getBaseProps = useCallback(() => ({\r\n    ref: domRef,\r\n    className: baseClasses,\r\n  }), [ref])\r\n\r\n  return {\r\n    Element,\r\n    children,\r\n    getBaseProps,\r\n    AvatarProvider,\r\n    context,\r\n  }\r\n}\r\n"]}